// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehousesAPI.Data;

#nullable disable

namespace WarehousesAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220115183748_Added_All_Needed_JSON_Tables")]
    partial class Added_All_Needed_JSON_Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("WarehousesAPI.Entities.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("lat")
                        .HasColumnType("TEXT");

                    b.Property<string>("long")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.LocationDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("location")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LocationDictionaries");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date_Added")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Licensed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarsId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("carsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("carsId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Vehicle", b =>
                {
                    b.HasOne("WarehousesAPI.Entities.Cars", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("CarsId");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Warehouse", b =>
                {
                    b.HasOne("WarehousesAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("WarehousesAPI.Entities.Cars", "cars")
                        .WithMany()
                        .HasForeignKey("carsId");

                    b.Navigation("Location");

                    b.Navigation("cars");
                });

            modelBuilder.Entity("WarehousesAPI.Entities.Cars", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
